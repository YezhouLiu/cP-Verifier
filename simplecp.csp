//simplecp
var applied = false; 
var b;
var d;
var a;
var c;
var state = 1;

P0() = cp_init{
b = 0;
d = 0;
a = 10;
c = 0;
}-> P1();
P1() = r1{
if (state == 1 && a > 0){
applied = true;
a = a - 2;
b = b + 1;
state = 1;
}
}-> P2();
P2() = r2{
if (state == 1 && b > 0){
applied = true;
b = b - 2;
c = c + 1;
d = d + 2;
state = 1;
}
}-> P_CHECK();
P_CHECK() = if(applied == true){P_NEXT()} else {Skip};
P_NEXT() = {applied = false;}-> P1();
#assert P0() nonterminating;
#assert P0() deadlockfree;
#assert P0() divergencefree;
#assert P0() deterministic;

